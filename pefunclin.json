// 

{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "name": {
            "type": "string",
            "defaultValue": "[concat('funcapp', uniqueString(resourceGroup().id))]"
        },
        "name": {
            "type": "string",
            "defaultValue": "[concat('funcapp', uniqueString(resourceGroup().id))]"
        },
        "location": {
            "type": "string",
            "defaultValue": "West US 2"
        },
        "use32BitWorkerProcess": {
            "type": "bool",
            "defaultValue": false
        },
        "ftpsState": {
            "type": "string",
            "defaultValue": "AllAllowed"
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "[concat('storage', uniqueString(resourceGroup().id))]"
        },
        "linuxFxVersion": {
            "type": "string",
            "defaultValue": "DOTNET-ISOLATED|8.0"
        },
        "sku": {
            "type": "string",
            "defaultValue": "ElasticPremium"
        },
        "skuCode": {
            "type": "string",
            "defaultValue": "EP1"
        },
        "workerSize": {
            "type": "string",
            "defaultValue": "3"
        },
        "workerSizeId": {
            "type": "string",
            "defaultValue": "3"
        },
        "numberOfWorkers": {
            "type": "string",
            "defaultValue": "1"
        },
        "hostingPlanName": {
            "type": "string",
            "defaultValue": "[concat('funcappASP', uniqueString(resourceGroup().id))]"
        },
        "serverFarmResourceGroup": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]"
        },
        "alwaysOn": {
            "type": "bool",
            "defaultValue": false
        }
    },
    "variables": {
        "contentShare": "testerrr5601fa9a2b",
        "inboundSubnetDeployment": "inboundSubnetDeployment",
        "outboundSubnetDeployment": "outboundSubnetDeployment",
        "connectedServiceSubnetDeployment": "connectedServiceSubnetDeployment",
        "inboundPrivateDnsZoneDeploymentName": "privatelink.azurewebsites.net-deployment",
        "inboundPrivateDnsZoneName": "privatelink.azurewebsites.net",
        "privateEndpointStorageFileName": "[format('{0}-file-private-endpoint', parameters('storageAccountName'))]",
        "privateEndpointStorageTableName": "[format('{0}-table-private-endpoint', parameters('storageAccountName'))]",
        "privateEndpointStorageBlobName": "[format('{0}-blob-private-endpoint', parameters('storageAccountName'))]",
        "privateEndpointStorageQueueName": "[format('{0}-queue-private-endpoint', parameters('storageAccountName'))]",
        "privateStorageFileDnsZoneName": "privatelink.file.core.windows.net",
        "privateStorageTableDnsZoneName": "privatelink.table.core.windows.net",
        "privateStorageBlobDnsZoneName": "privatelink.blob.core.windows.net",
        "privateStorageQueueDnsZoneName": "privatelink.queue.core.windows.net"
    },
    "resources": [
        {
            "apiVersion": "2022-03-01",
            "name": "[parameters('name')]",
            "type": "Microsoft.Web/sites",
            "kind": "functionapp,linux",
            "location": "[parameters('location')]",
            "tags": {
                "SecurityControl": "Ignore"
            },
            "dependsOn": [
                "microsoft.insights/components/appinsights5601",
                "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
                "[variables('outboundSubnetDeployment')]",
                "[variables('inboundSubnetDeployment')]"
            ],
            "properties": {
                "name": "[parameters('name')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet-isolated"
                        },
                        {
                            "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                            "value": "[reference('microsoft.insights/components/appinsights5601', '2015-05-01').ConnectionString]"
                        },
                        {
                            "name": "WEBSITE_USE_PLACEHOLDER_DOTNETISOLATED",
                            "value": "1"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-05-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-05-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[variables('contentShare')]"
                        }
                    ],
                    "cors": {
                        "allowedOrigins": [
                            "https://portal.azure.com"
                        ]
                    },
                    "use32BitWorkerProcess": "[parameters('use32BitWorkerProcess')]",
                    "ftpsState": "[parameters('ftpsState')]",
                    "linuxFxVersion": "[parameters('linuxFxVersion')]"
                },
                "clientAffinityEnabled": false,
                "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'testvnet5601', 'OutSub')]",
                "functionsRuntimeAdminIsolationEnabled": false,
                "publicNetworkAccess": "Enabled",
                "vnetRouteAllEnabled": true,
                "vnetContentShareEnabled": true,
                "httpsOnly": true,
                "serverFarmId": "[concat('/subscriptions/', subscription().subscriptionId,'/resourcegroups/', parameters('serverFarmResourceGroup'), '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
            },
            "resources": [
                {
                    "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
                    "apiVersion": "2022-09-01",
                    "name": "[concat(parameters('name'), '/scm')]",
                    "properties": {
                        "allow": false
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                    ]
                },
                {
                    "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
                    "apiVersion": "2022-09-01",
                    "name": "[concat(parameters('name'), '/ftp')]",
                    "properties": {
                        "allow": false
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                    ]
                }
            ]
        },
        {
            "apiVersion": "2018-11-01",
            "name": "[parameters('hostingPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[parameters('location')]",
            "kind": "linux",
            "tags": null,
            "dependsOn": [],
            "properties": {
                "name": "[parameters('hostingPlanName')]",
                "workerSize": "[parameters('workerSize')]",
                "workerSizeId": "[parameters('workerSizeId')]",
                "numberOfWorkers": "[parameters('numberOfWorkers')]",
                "reserved": true,
                "maximumElasticWorkerCount": "20",
                "zoneRedundant": false
            },
            "sku": {
                "Tier": "[parameters('sku')]",
                "Name": "[parameters('skuCode')]"
            }
        },
        {
            "apiVersion": "2020-02-02-preview",
            "name": "appinsights5601",
            "type": "microsoft.insights/components",
            "location": "westus2",
            "tags": {
                "SecurityControl": "Ignore"
            },
            "dependsOn": [],
            "properties": {
                "ApplicationId": "[parameters('name')]",
                "Request_Source": "IbizaWebAppExtensionCreate",
                "Flow_Type": "Redfield",
                "Application_Type": "web",
                "DisableLocalAuth": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-07-01",
            "location": "westus2",
            "name": "testvnet5601",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": []
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-07-01",
            "name": "[variables('inboundSubnetDeployment')]",
            "resourceGroup": "",
            "subscriptionId": "",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks/subnets",
                            "apiVersion": "2020-07-01",
                            "name": "testvnet5601/InbSub",
                            "properties": {
                                "delegations": [],
                                "serviceEndpoints": [],
                                "addressPrefix": "10.0.0.0/24"
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'testvnet5601')]"
            ]
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-07-01",
            "name": "[variables('outboundSubnetDeployment')]",
            "resourceGroup": "",
            "subscriptionId": "",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks/subnets",
                            "apiVersion": "2020-07-01",
                            "name": "testvnet5601/OutSub",
                            "properties": {
                                "delegations": [
                                    {
                                        "name": "delegation",
                                        "properties": {
                                            "serviceName": "Microsoft.Web/serverfarms"
                                        }
                                    }
                                ],
                                "serviceEndpoints": [],
                                "addressPrefix": "10.0.1.0/24"
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'testvnet5601')]",
                "[variables('inboundSubnetDeployment')]"
            ]
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-07-01",
            "name": "[variables('connectedServiceSubnetDeployment')]",
            "resourceGroup": "",
            "subscriptionId": "",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks/subnets",
                            "apiVersion": "2020-07-01",
                            "name": "testvnet5601/IntegSub",
                            "properties": {
                                "delegations": [],
                                "serviceEndpoints": [],
                                "addressPrefix": "10.0.2.0/24"
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualnetworks', 'testvnet5601')]",
                "[variables('inboundSubnetDeployment')]",
                "[variables('outboundSubnetDeployment')]"
            ]
        },
        {
            "apiVersion": "2021-02-01",
            "name": "testvnet5601",
            "location": "[parameters('location')]",
            "type": "Microsoft.Network/privateEndpoints",
            "dependsOn": [
                "[resourceId('Microsoft.Web/Sites', parameters('name'))]",
                "[variables('inboundSubnetDeployment')]"
            ],
            "properties": {
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'testvnet5601', 'InbSub')]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "testvnet5601",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Web/Sites', parameters('name'))]",
                            "groupIds": [
                                "sites"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-03-01",
            "name": "[concat('testvnet5601', '/', 'default')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "testvnet5601",
                "[variables('inboundPrivateDnsZoneDeploymentName')]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "[format('{0}-config', variables('inboundPrivateDnsZoneName'))]",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('inboundPrivateDnsZoneName'))]"
                        }
                    }
                ]
            }
        },
        {
            "dependsOn": [
                "testvnet5601"
            ],
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "[variables('inboundPrivateDnsZoneDeploymentName')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/privateDnsZones",
                            "apiVersion": "2018-09-01",
                            "name": "[variables('inboundPrivateDnsZoneName')]",
                            "location": "global"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[format('{0}/{1}', variables('inboundPrivateDnsZoneName'), format('{0}-link', parameters('name')))]",
            "location": "global",
            "dependsOn": [
                "testvnet5601",
                "[variables('inboundPrivateDnsZoneDeploymentName')]"
            ],
            "properties": {
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', 'testvnet5601')]"
                },
                "registrationEnabled": false
            }
        },
        {
            "apiVersion": "2021-02-01",
            "name": "[concat('PrivEnd', '-', variables('privateEndpointStorageFileName'))]",
            "type": "Microsoft.Network/privateEndpoints",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('name'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                "[variables('connectedServiceSubnetDeployment')]"
            ],
            "properties": {
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualnetworks/subnets', 'testvnet5601', 'IntegSub')]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "filePrivateLinkConnection",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                            "groupIds": [
                                "file"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2021-02-01",
            "name": "[concat('PrivEnd', '-', variables('privateEndpointStorageTableName'))]",
            "type": "Microsoft.Network/privateEndpoints",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('name'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                "[variables('connectedServiceSubnetDeployment')]"
            ],
            "properties": {
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualnetworks/subnets', 'testvnet5601', 'IntegSub')]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "tablePrivateLinkConnection",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                            "groupIds": [
                                "table"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2021-02-01",
            "name": "[concat('PrivEnd', '-', variables('privateEndpointStorageBlobName'))]",
            "type": "Microsoft.Network/privateEndpoints",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('name'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                "[variables('connectedServiceSubnetDeployment')]"
            ],
            "properties": {
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualnetworks/subnets', 'testvnet5601', 'IntegSub')]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "blobPrivateLinkConnection",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                            "groupIds": [
                                "blob"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2021-02-01",
            "name": "[concat('PrivEnd', '-', variables('privateEndpointStorageQueueName'))]",
            "type": "Microsoft.Network/privateEndpoints",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('name'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                "[variables('connectedServiceSubnetDeployment')]"
            ],
            "properties": {
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualnetworks/subnets', 'testvnet5601', 'IntegSub')]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "queuePrivateLinkConnection",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                            "groupIds": [
                                "queue"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-03-01",
            "name": "[concat('PrivEnd', '-', variables('privateEndpointStorageFileName'), '/', variables('privateEndpointStorageFileName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('PrivEnd', '-', variables('privateEndpointStorageFileName'))]",
                "[concat(variables('privateStorageFileDnsZoneName'), '-', 'deployment')]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "[format('{0}-config', variables('privateStorageFileDnsZoneName'))]",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateStorageFileDnsZoneName'))]"
                        }
                    }
                ]
            }
        },
        {
            "dependsOn": [
                "[concat('PrivEnd', '-', variables('privateEndpointStorageFileName'))]"
            ],
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('privateStorageFileDnsZoneName'), '-', 'deployment')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/privateDnsZones",
                            "apiVersion": "2018-09-01",
                            "name": "[variables('privateStorageFileDnsZoneName')]",
                            "location": "global"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[format('{0}/{1}', variables('privateStorageFileDnsZoneName'), 'testerrr5601rg8ed2-link-b81a')]",
            "location": "global",
            "dependsOn": [
                "[concat('PrivEnd', '-', variables('privateEndpointStorageFileName'))]",
                "[concat(variables('privateStorageFileDnsZoneName'), '-', 'deployment')]"
            ],
            "properties": {
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualnetworks', 'testvnet5601')]"
                },
                "registrationEnabled": false
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-03-01",
            "name": "[concat('PrivEnd', '-', variables('privateEndpointStorageTableName'), '/', variables('privateEndpointStorageTableName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('PrivEnd', '-', variables('privateEndpointStorageTableName'))]",
                "[concat(variables('privateStorageTableDnsZoneName'), '-', 'deployment')]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "[format('{0}-config', variables('privateStorageTableDnsZoneName'))]",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateStorageTableDnsZoneName'))]"
                        }
                    }
                ]
            }
        },
        {
            "dependsOn": [
                "[concat('PrivEnd', '-', variables('privateEndpointStorageTableName'))]"
            ],
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('privateStorageTableDnsZoneName'), '-', 'deployment')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/privateDnsZones",
                            "apiVersion": "2018-09-01",
                            "name": "[variables('privateStorageTableDnsZoneName')]",
                            "location": "global"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[format('{0}/{1}', variables('privateStorageTableDnsZoneName'), 'testerrr5601rg8ed2-link-b666')]",
            "location": "global",
            "dependsOn": [
                "[concat('PrivEnd', '-', variables('privateEndpointStorageTableName'))]",
                "[concat(variables('privateStorageTableDnsZoneName'), '-', 'deployment')]"
            ],
            "properties": {
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualnetworks', 'testvnet5601')]"
                },
                "registrationEnabled": false
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-03-01",
            "name": "[concat('PrivEnd', '-', variables('privateEndpointStorageBlobName'), '/', variables('privateEndpointStorageBlobName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('PrivEnd', '-', variables('privateEndpointStorageBlobName'))]",
                "[concat(variables('privateStorageBlobDnsZoneName'), '-', 'deployment')]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "[format('{0}-config', variables('privateStorageBlobDnsZoneName'))]",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateStorageBlobDnsZoneName'))]"
                        }
                    }
                ]
            }
        },
        {
            "dependsOn": [
                "[concat('PrivEnd', '-', variables('privateEndpointStorageBlobName'))]"
            ],
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('privateStorageBlobDnsZoneName'), '-', 'deployment')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/privateDnsZones",
                            "apiVersion": "2018-09-01",
                            "name": "[variables('privateStorageBlobDnsZoneName')]",
                            "location": "global"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[format('{0}/{1}', variables('privateStorageBlobDnsZoneName'), 'testerrr5601rg8ed2-link-9aab')]",
            "location": "global",
            "dependsOn": [
                "[concat('PrivEnd', '-', variables('privateEndpointStorageBlobName'))]",
                "[concat(variables('privateStorageBlobDnsZoneName'), '-', 'deployment')]"
            ],
            "properties": {
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualnetworks', 'testvnet5601')]"
                },
                "registrationEnabled": false
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-03-01",
            "name": "[concat('PrivEnd', '-', variables('privateEndpointStorageQueueName'), '/', variables('privateEndpointStorageQueueName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('PrivEnd', '-', variables('privateEndpointStorageQueueName'))]",
                "[concat(variables('privateStorageQueueDnsZoneName'), '-', 'deployment')]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "[format('{0}-config', variables('privateStorageQueueDnsZoneName'))]",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateStorageQueueDnsZoneName'))]"
                        }
                    }
                ]
            }
        },
        {
            "dependsOn": [
                "[concat('PrivEnd', '-', variables('privateEndpointStorageQueueName'))]"
            ],
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('privateStorageQueueDnsZoneName'), '-', 'deployment')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/privateDnsZones",
                            "apiVersion": "2018-09-01",
                            "name": "[variables('privateStorageQueueDnsZoneName')]",
                            "location": "global"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[format('{0}/{1}', variables('privateStorageQueueDnsZoneName'), 'testerrr5601rg8ed2-link-83c0')]",
            "location": "global",
            "dependsOn": [
                "[concat('PrivEnd', '-', variables('privateEndpointStorageQueueName'))]",
                "[concat(variables('privateStorageQueueDnsZoneName'), '-', 'deployment')]"
            ],
            "properties": {
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualnetworks', 'testvnet5601')]"
                },
                "registrationEnabled": false
            }
        },
        {
            "apiVersion": "2022-05-01",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('storageAccountName')]",
            "dependsOn": [],
            "location": "[parameters('location')]",
            "tags": {
                "SecurityControl": "Ignore"
            },
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {
                "supportsHttpsTrafficOnly": true,
                "minimumTlsVersion": "TLS1_2",
                "defaultToOAuthAuthentication": true,
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "publicNetworkAccess": "Disabled"
            }
        },
        {
            "name": "[format('{0}/default/{1}', parameters('storageAccountName'), variables('contentShare'))]",
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2022-05-01",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]"
            ]
        },
        {
            "name": "[format('{0}/default/container1', parameters('storageAccountName'))]",
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2022-05-01",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        }
    ]

}
